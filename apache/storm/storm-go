#!/usr/bin/env bash
set -e



declare -a Daemons=( \
        'dev-zookeeper'
        'drpc'
        'logviewer'
        'nimbus'
        'pacemaker'
        'supervisor'
        'ui'
        )
declare -a DaemonJpsNames=( \
        'dev_zookeeper'
        'drpc'
        'logviewer'
        'nimbus'
        'pacemaker'
        'supervisor'
        'core'
        )
declare -a Running
declare -a Selections
readonly JpsOut="$(jps)"



function findOutWhatsRunning() {
    for i in $(seq 0 $(( ${#DaemonJpsNames[@]} - 1 )))
    do
        echo "$JpsOut" | grep ${DaemonJpsNames[$i]} \
            && Running[$i]='(Running)' \
            || Running[$i]=''
    done
}



function refreshSelections() {
    for i in $(seq 0 $(( ${#Daemons[@]} - 1 )))
    do
        Selections[$i]="${Daemons[$i]}${Running[$i]}${Selected[$i]}"
    done
}



function launchDaemon() {
    local readonly Daemon="$1"
    local readonly LogDir='storm-go-logs'

    mkdir -p "$LogDir"

    echo "Starting $Daemon"
    ( bin/storm "$Daemon" \
         2>"$LogDir/$Daemon.err" \
         >"$LogDir/$Daemon.out" ) &
}



function applySelections() {
    for i in $(seq 0 $(( ${#Daemons[@]} - 1)))
    do
        if [[ -n "${Selected[$i]}" ]]
        then
            if [[ '(Running)' == "${Running[$i]}" ]]
            then
                local readonly pids="$(echo "$JpsOut" \
                    | grep ${DaemonJpsNames[$i]} \
                    | sed 's; .*;;')"
                for pid in $pids
                do
                    echo "Killing ${Daemons[$i]} pid $pid"
                    kill "$pid"
                done
            else
                launchDaemon ${Daemons[$i]}
            fi
        fi
    done
}



# main



findOutWhatsRunning

while :
do
    refreshSelections
    echo
    echo 'Select deamons whose state to toggle, then APPLY'
    select Selection in ${Selections[@]} 'APPLY'
    do
        case "$REPLY" in
            [1-${#Daemons[@]}])
                idx="$(( REPLY - 1 ))"
                if [[ -n "${Selected[$idx]}" ]]
                then
                    Selected[$idx]=''
                else
                    Selected[$idx]='â˜œ'
                fi
                break;;
            $(( ${#Daemons[@]} + 1))) applySelections; exit 0;;
            *) ;;
        esac
    done
    test -z "$REPLY" && exit 1
done
